{"version":3,"file":"broker-lib.js","sources":["ng://broker-lib/lib/services/common/constants.service.ts","ng://broker-lib/lib/services/common/brokerhttp.service.ts","ng://broker-lib/lib/models/common/wslogerrore.ts","ng://broker-lib/lib/services/log-errori/log-errori.service.ts","ng://broker-lib/lib/services/common/alert.service.ts","ng://broker-lib/lib/models/login/wsToken.ts","ng://broker-lib/lib/services/store/store.service.ts","ng://broker-lib/lib/services/immobili/immobili.service.ts","ng://broker-lib/lib/models/clienti/cliente.ts","ng://broker-lib/lib/models/common/connection.ts","ng://broker-lib/lib/services/common/session.service.ts","ng://broker-lib/lib/handler/error/error-handler.service.ts","ng://broker-lib/lib/services/clienti/clienti.service.ts","ng://broker-lib/lib/services/dropdown/dropdown.service.ts","ng://broker-lib/lib/services/icone/icone.service.ts","ng://broker-lib/lib/broker-lib.module.ts","ng://broker-lib/lib/services/report/report.service.ts","ng://broker-lib/lib/services/login/login.service.ts","ng://broker-lib/lib/models/report/grafici.ts","ng://broker-lib/lib/models/report/graficiAffittuario.ts","ng://broker-lib/lib/models/report/graficiAndamentoAnnuale.ts","ng://broker-lib/lib/models/report/graficiConcentrazione.ts","ng://broker-lib/lib/models/report/graficiIndicatore.ts","ng://broker-lib/lib/models/report/reportGenerale.ts","ng://broker-lib/lib/models/report/reportGeneraleAttivo.ts","ng://broker-lib/lib/models/report/reportGeneralePassivo.ts","ng://broker-lib/lib/models/report/reportGeneraleOggettoColonna.ts","ng://broker-lib/lib/models/clienti/abilitaAppClienteRequest.ts","ng://broker-lib/lib/models/clienti/bookValue.ts","ng://broker-lib/lib/models/clienti/inserimentoClienteRequest.ts","ng://broker-lib/lib/models/clienti/inserimentoClienteResponse.ts","ng://broker-lib/lib/models/immobili/immobile.ts","ng://broker-lib/lib/models/immobili/affittoDettaglio.ts","ng://broker-lib/lib/models/immobili/cancellazioneImmobileRequest.ts","ng://broker-lib/lib/models/immobili/cointestatarioDettaglio.ts","ng://broker-lib/lib/models/immobili/datiCatastaliDettaglio.ts","ng://broker-lib/lib/models/immobili/immobileDettaglio.ts","ng://broker-lib/lib/models/immobili/immobileDettaglioVM.ts","ng://broker-lib/lib/models/immobili/inserimentoImmobileResponse.ts","ng://broker-lib/lib/models/immobili/mutuoDettaglio.ts","ng://broker-lib/lib/models/immobili/omiDettaglio.ts","ng://broker-lib/lib/models/immobili/spesaDettaglio.ts","ng://broker-lib/lib/models/immobili/tassaDettaglio.ts","ng://broker-lib/lib/models/immobili/pianoAmmortamento.ts","ng://broker-lib/lib/models/immobili/annoPianoAmmortamento.ts","ng://broker-lib/lib/models/login/loginRequest.ts","ng://broker-lib/lib/models/login/utente.ts","ng://broker-lib/lib/models/login/cambioPasswordRequest.ts","ng://broker-lib/lib/models/common/errormessage.ts","ng://broker-lib/lib/models/common/ddlitem.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConstantsService {\n    public readonly baseAppUrl: string = 'http://89.31.75.45:443/Spring-JPA-Security';\n    public readonly tokenHeaderKey: string = 'Authorization';\n    public readonly pathSeparator: string = '/';\n\n    public readonly loginServiceName: string = 'login';\n    public readonly cambioPasswordServiceName: string = 'putPassword';\n\n    // immobili\n    public readonly getImmobiliServiceName: string = 'getImmobili';\n    public readonly getImmobileServiceName: string = 'getImmobile';\n    public readonly putImmobileServiceName: string = 'putImmobile';\n    public readonly delImmobileServiceName: string = 'delimmobile';\n    public readonly getCatastoServiceName: string = 'getcatasto';\n    public readonly getPianoAmmortamentoServiceName: string = 'getPiano';\n\n    // clienti\n    public readonly getClientiServiceName: string = 'getClienti';\n    public readonly putClientiServiceName: string = 'putCliente';\n    public readonly abilitaAppClienteServiceName: string = 'appcliente';\n    public readonly bookValueServiceName: string = 'getBookValue';\n    public readonly pianoAmmortamentoServiceName: string = 'getpiano';\n\n    // report\n    public readonly situazioneGeneraleServiceName: string = 'getSituazione';\n    public readonly graficiServiceName: string = 'getgrafici';\n    public readonly pdfReportServiceName: string = 'getpdfreport';\n\n    public readonly postErroreServiceName: string = 'writeLog';\n    public readonly getDropdownServiceName: string = 'get_dropdown';\n\n    // tipologia icone immobili\n    public readonly tipologiaImmobileVilla: string = 'villa';\n    public readonly tipologiaImmobileCasa: string = 'casa';\n    public readonly tipologiaImmobileAgricolo: string = 'agricolo';\n    public readonly tipologiaImmobileUfficio: string = 'ufficio';\n    public readonly tipologiaImmobileAlbergo: string = 'albergo';\n    public readonly tipologiaImmobileOspedale: string = 'ospedale';\n    public readonly tipologiaImmobileScuola: string = 'scuola';\n    public readonly tipologiaImmobileMuseo: string = 'museo';\n    public readonly tipologiaImmobileChiesa: string = 'chiesa';\n    public readonly tipologiaImmobileMagazzino: string = 'magazzino';\n    public readonly tipologiaImmobileNegozio: string = 'negozio';\n    public readonly tipologiaImmobileSport: string = 'sport';\n    public readonly tipologiaImmobileGarage: string = 'garage';\n    public readonly tipologiaImmobileFabbrica: string = 'fabbrica';\n    public readonly tipologiaImmobileTeatro: string = 'teatro';\n    public readonly tipologiaImmobileBanca: string = 'banca';\n    public readonly tipologiaImmobilePonte: string = 'ponte';\n    public readonly tipologiaImmobileStazione: string = 'stazione';\n    public readonly tipologiaImmobileCantiere: string = 'cantiere';\n\n    // dropdown\n    public readonly getDdlEuribor: string = 'getDdlTipoEuribor';\n    public readonly getDdlAffittuari: string = 'getDdlTipoAffittuari';\n    public readonly getDdlTasse: string = 'getDdlTasse';\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpBackend } from \"@angular/common/http\";\n\nimport { Observable } from \"rxjs\";\n\nimport { Http } from \"../../models/common/http.namespace\";\n\nimport { ConstantsService } from \"./constants.service\";\nimport { SessionService } from './session.service';\n\n\n@Injectable()\nexport class BrokerHttpService {\n\n    private httpClientLogin: HttpClient;\n\n    constructor(\n        private http: HttpClient,\n        private constants: ConstantsService,\n        private backEnd: HttpBackend) {\n        this.httpClientLogin = new HttpClient(this.backEnd);\n    }\n\n    public get(path: string): Observable<Http.HttpResponse> {\n        return this.http.get<Http.HttpResponse>(this.constants.baseAppUrl + \"/\" + path);\n    }\n\n    public getNoToken(path: string): Observable<Http.HttpResponse> {\n        console.log(\"HttpService get \" + path);\n        return this.httpClientLogin.get<Http.HttpResponse>(this.constants.baseAppUrl + \"/\" + path);\n    }\n\n    public post(path: string, body: any): Observable<Http.HttpResponse> {\n        return this.http.post<Http.HttpResponse>(this.constants.baseAppUrl + \"/\" + path, body);\n    }\n\n    public postNoToken(path: string, body: any): Observable<Http.HttpResponse> {\n        console.log(\"HttpService post \" + path);\n        return this.httpClientLogin.post<Http.HttpResponse>(this.constants.baseAppUrl + \"/\" + path, body);\n    }\n\n}\n","export class WsLogErrore {\n    public token: string;\n    public log_stacktrace: string;\n    public log_descrerr: string;\n    public log_metodoerr: string;\n    public log_link: string;\n    public log_query: string;\n    public username: string;\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Http } from '../../models/common/http.namespace';\nimport { BrokerHttpService } from '../common/brokerhttp.service';\nimport { ConstantsService } from '../common/constants.service';\nimport { WsLogErrore } from '../../models/common/wslogerrore';\nimport { ErrorMessage } from '../../models/common/errormessage';\n\n/**\n *\n *\n * @export\n * LogErroriService\n */\n@Injectable()\nexport class LogErroriService {\n\n    constructor(\n        private httpService: BrokerHttpService,\n        private constants: ConstantsService) { }\n\n    /**\n     * Chiamata per il salvataggio su persistenza di errori\n     *\n     * @param errorData\n     * @param tokenValue\n     * @returns\n     * LogErroriService\n     */\n    public postErrore(errorData: WsLogErrore): Observable<Http.HttpResponse> {\n        return this.httpService.post(this.constants.postErroreServiceName, errorData);\n    }\n\n    public generateErrorMessage(errorMessage: ErrorMessage): WsLogErrore {\n        const logErrore: WsLogErrore = new WsLogErrore();\n\n        logErrore.log_descrerr = errorMessage.msg_testo;\n        logErrore.log_stacktrace = errorMessage.msg_techdata;\n\n        return logErrore;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n// import { Platform, MenuController, Nav, NavController, AlertController, ToastController } from 'ionic-angular';\n\n\n@Injectable()\nexport class AlertService {\n\n    constructor(private alertController: AlertController) {\n    }\n\n    public async presentAlert(alertMessage: string) {\n        const alert = this.alertController.create({\n            header: 'Conferma',\n            message: alertMessage,\n            buttons: ['OK']\n        });\n        alert.then((_alert: any) => {\n            _alert.present();\n        });\n    }\n\n    public async presentErrorAlert(alertMessage: string) {\n        const alert = this.alertController.create({\n            header: 'Errore',\n            message: alertMessage,\n            buttons: ['CHIUDI']\n        });\n        alert.then((_alert: any) => {\n            _alert.present();\n        });\n    }\n}\n","import { Utente } from './utente';\n\nexport class WsToken {\n    public token_value: string;\n    public tipo_utente: string;\n    public utente: Utente;\n}\n","import { Injectable } from \"@angular/core\";\nimport { Storage } from '@ionic/Storage';\nimport { WsToken } from '../../models/login/wsToken';\n\n@Injectable()\nexport class StoreService {\n\n    private USERKEY = \"user\";\n\n    private wsToken: WsToken;\n\n    constructor(private storage: Storage) {\n        this.wsToken = null;\n    }\n\n    public clearUserData(): void {\n        this.storage.clear();\n        this.wsToken = null;\n    }\n\n    public setUserData(ws_token: WsToken): number {\n        console.log(\"setUserData\");\n        this.wsToken = ws_token;\n        if (ws_token != null) {\n            this.storage.set(this.USERKEY, ws_token).then((val) => {\n                console.log(val);\n            });\n        } else {\n            return -1;\n        }\n        return 1;\n    }\n\n    public getUserDataPromise() {\n        return new Promise(resolve => {\n            if (this.wsToken == null) {\n                // store service prima inizializzaione\n                this.storage.get(this.USERKEY).then((val: WsToken) => {\n                    // recuperato token dal database\n                    console.log(val);\n                    if (val != null) {\n                        resolve(val);\n                    } else {\n                        console.log(\"necessario login\");\n                        this.setUserData(null);\n                        this.wsToken = null;\n                        // devo andare alla pagina del login\n                        resolve(null);\n                    }\n                }\n                );\n            } else {\n                // store service giÃ  inizializzato\n\n                // come al punto precedente servirebbe controllare il token ed eventualmente fare di nuovo il login;\n\n                resolve(this.wsToken);\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Http } from '../../models/common/http.namespace';\nimport { BrokerHttpService } from '../common/brokerhttp.service';\nimport { ConstantsService } from '../common/constants.service';\nimport { ImmobileDettaglio } from '../../models/immobili/immobileDettaglio';\nimport { CancellazioneImmobileRequest } from '../../models/immobili/cancellazioneImmobileRequest';\n\n/**\n * Classe che raduna tutti i servizi riconducibili all'entitÃ  immobile\n *\n * @export\n * ImmobiliService\n */\n@Injectable()\nexport class ImmobiliService {\n\n    constructor(\n        private httpService: BrokerHttpService,\n        private constants: ConstantsService) { }\n\n    /**\n     * Chiamata per ottenere l'elenco degli immobili appartenenti ad uno specifico cliente\n     *\n     * @param  id_cliente\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages. Contenente l'oggetto \n     * Data dentro al quale si trova l'elenco degli immobili\n     */\n    public getImmobili(id_cliente: string): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.getImmobiliServiceName\n            + this.constants.pathSeparator\n            + id_cliente);\n        // return this.httpService.get('getimmobili' + '/' + idCliente, tokenValue);\n    }\n\n    /**\n     * Chiamata per ottenere il singolo immobile passando il suo identificativo unico\n     *\n     * @param  immobile_id\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages. Contenente l'oggetto \n     * Data dentro al quale si trova l'oggetto Immobile\n     */\n    public getImmobile(immobile_id: string): Observable<Http.HttpResponse> {\n        // return this.httpService.get(this.constants.getImmobileServiceName + this.constants.pathSeparator + immobile_id, tokenValue);\n        return this.httpService.get(this.constants.getImmobileServiceName\n            + this.constants.pathSeparator\n            + immobile_id);\n    }\n\n    /**\n     * Chiamata per inserire un nuovo immobile\n     *\n     * @param  immobile\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages. Contenente l'oggetto \n     * Data dentro al quale si trova l'id dell'immobile appena salvato\n     */\n    public putImmobile(immobile: ImmobileDettaglio): Observable<Http.HttpResponse> {\n        return this.httpService.post(this.constants.putImmobileServiceName, immobile);\n    }\n\n    /**\n     * Chiamata per cancellare un immobile passando il suo identificativo unico\n     *\n     * @param  cancellazioneRequest\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages.\n     */\n    public delImmobile(cancellazioneRequest: CancellazioneImmobileRequest): Observable<Http.HttpResponse> {\n        return this.httpService.post(this.constants.delImmobileServiceName, cancellazioneRequest);\n    }\n\n    /**\n     * Chiamata per attivare il flusso di invio dei dati catastali via mail all'utente proprietario dell'immobile di cui deve \n     * essere passato l'identificativo unico\n     *\n     * @param  immobile_id\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages.\n     */\n    public invioDatiCatastali(immobile_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.getCatastoServiceName + this.constants.pathSeparator + immobile_id);\n    }\n\n    public getPianoAmmortamentoImmobile(immobile_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.getPianoAmmortamentoServiceName + this.constants.pathSeparator + immobile_id);\n    }\n}\n","// tslint:disable-next-line: no-namespace\nexport class Cliente {\n    public cliente_id: number;\n    public nome: string;\n    public cognome: string;\n    public email: string;\n    public codice_fiscale: string;\n    public numero_proprieta: number;\n    public book_value: number;\n    public data_aggiornamento: string;\n    public stato_cliente: string;\n}\n","export class Connection {\n    public url: string;\n    public pathseparator: string;\n    public headertokenkey: string;\n}\n","import { WsToken } from './../../models/login/wsToken';\nimport { Injectable } from '@angular/core';\nimport { StoreService } from '../store/store.service';\nimport { ImmobiliService } from '../immobili/immobili.service';\n\nimport { Cliente } from '../../models/clienti/cliente';\nimport { Immobile } from '../../models/immobili/immobile';\nimport { Subject } from 'rxjs';\nimport { ImmobileDettaglio } from '../../models/immobili/immobileDettaglio';\nimport { Connection } from '../../models/common/connection';\nimport { resolve } from 'url';\n\n@Injectable()\nexport class SessionService {\n\n    public cliente: Cliente;\n    public immobiliCliente: Array<Immobile>;\n    public immobile: ImmobileDettaglio = undefined;\n    private elencoImmobiliSubject: Subject<boolean> = new Subject<boolean>();\n    public elencoImmobiliObs = this.elencoImmobiliSubject.asObservable();\n    private userData: WsToken;\n\n    private connection: Connection;\n\n    private userDataSubject: Subject<boolean> = new Subject<boolean>();\n    public userDataObservable = this.userDataSubject.asObservable();\n\n    constructor(\n        private storeService: StoreService,\n        private immobiliService: ImmobiliService\n    ) {\n        this.userData = new WsToken();\n        this.connection = new Connection();\n        this.cliente = new Cliente();\n    }\n\n    public setCliente(cliente: Cliente): void {\n        this.cliente = cliente;\n        this.immobiliService.getImmobili(this.cliente.cliente_id + '').subscribe(r => {\n            if (r.Success) {\n                this.immobiliCliente = r.Data.elenco_immobili;\n                // sveglia chi Ã¨ in ascolto\n                this.elencoImmobiliSubject.next(true);\n            }\n        });\n    }\n\n    public clearUserData(): void {\n        this.storeService.clearUserData();\n        this.userData = new WsToken();\n    }\n\n    public setUserData(userData: WsToken): number {\n        this.userData = userData;\n        if (userData != null) {\n            this.storeService.setUserData(userData);\n        } else {\n            return -1;\n        }\n        return 1;\n    }\n\n    public getUserData(): WsToken {\n        return this.userData;\n    }\n\n    public loadUserData(): void {\n        if (this.userData !== null && this.userData !== undefined && this.userData.token_value === '') {\n            this.userDataSubject.next(true);\n        } else {\n            this.storeService.getUserDataPromise().then((val: WsToken) => {\n                if (val == null) {\n                    this.userDataSubject.next(false);\n                } else {\n                    this.userData = val;\n                    this.userDataSubject.next(true);\n                }\n            });\n        }\n    }\n\n    public getCliente(): Cliente {\n        return this.cliente;\n    }\n\n    public getImmobiliCliente(): Array<Immobile> {\n        return this.immobiliCliente;\n    }\n\n    public setImmobileDettaglio(immobileDettaglio: ImmobileDettaglio): void {\n        this.immobile = immobileDettaglio;\n    }\n\n    public getImmobileDettaglio(): ImmobileDettaglio {\n        return this.immobile;\n    }\n\n    public clearImmobileDettaglio(): void {\n        this.immobile = null;\n    }\n\n    public setConnection(conn: Connection): void {\n        this.connection = conn;\n    }\n\n    public getConnection(): Connection {\n        return this.connection;\n    }\n}\n","import { LogErroriService } from '../../services/log-errori/log-errori.service';\nimport { Injectable, ErrorHandler, Injector, NgZone } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { WsLogErrore } from '../../models/common/wslogerrore';\nimport { AlertService } from '../../services/common/alert.service';\nimport { SessionService } from '../../services/common/session.service';\n\n@Injectable()\nexport class ErrorHandlerService implements ErrorHandler {\n\n    constructor(\n        private injector: Injector,\n        private zone: NgZone,\n        private logErroriService: LogErroriService,\n        private alertService: AlertService,\n        private sessionService: SessionService) { }\n\n    handleError(error: Error | HttpErrorResponse) {\n        const token = this.sessionService.getUserData().token_value;\n\n        console.log('gestisco un errore');\n        const errore = new WsLogErrore();\n        errore.token = token;\n        errore.log_stacktrace = JSON.stringify(error);\n        errore.log_descrerr = error.message;\n        errore.log_metodoerr = '';\n        errore.log_link = '';\n        errore.log_query = '';\n        errore.username = '';\n        // console.log('trasmetto l\\'errore');\n        this.logErroriService.postErrore(errore).subscribe(r => {\n            console.log('errore trasmesso: ' + errore);\n            this.alertService.presentErrorAlert('Errore ' + error.message + ' trasmesso al server');\n        });\n        console.log('gestione errore completata');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Http } from '../../models/common/http.namespace';\nimport { BrokerHttpService } from '../common/brokerhttp.service';\nimport { ConstantsService } from '../common/constants.service';\nimport { InserimentoClienteRequest } from '../../models/clienti/inserimentoClienteRequest';\nimport { AbilitaAppClienteRequest } from '../../models/clienti/abilitaAppClienteRequest';\n\n/**\n * Classe che raduna tutti i servizi riconducibili all'entitÃ  cliente\n *\n * @export\n * ClientiService\n */\n@Injectable()\nexport class ClientiService {\n\n    constructor(\n        private httpService: BrokerHttpService,\n        private constants: ConstantsService) { }\n\n    /**\n     * Chiamata per ottenere l'elenco dei clienti completo.\n     *\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns contenente l'oggetto Data che a sua volta contiene l'elenco degli oggetti Cliente\n     */\n    public getClienti(): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.getClientiServiceName);\n    }\n\n    /**\n     * Chiamata per inserire un nuovo cliente\n     *\n     * @param  cliente\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages. Contenente l'oggetto \n     * Data dentro al quale si trova l'id dell'oggetto appena generato\n     */\n    public putCliente(cliente: InserimentoClienteRequest): Observable<Http.HttpResponse> {\n        return this.httpService.post(this.constants.putClientiServiceName, cliente);\n    }\n\n    /**\n     * Chiamata per abilitare l'app di uno specifico cliente\n     *\n     * @param  request oggetto contenente i parametri per l'abilitazione\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages.\n     */\n    public abilitaAppCliente(request: AbilitaAppClienteRequest): Observable<Http.HttpResponse> {\n        return this.httpService.post(this.constants.abilitaAppClienteServiceName, request);\n    }\n\n    /**\n     * Chiamata per ottenere il BookValue di un cliente\n     *\n     * @param  cliente_id identificativo unico del cliente del quale si vuole il BookValue\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages. Contenente l'oggetto \n     * Data che a sua volta contiene l'elenco degli oggetti BookValue\n     */\n    public getBookValue(cliente_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.bookValueServiceName + this.constants.pathSeparator + cliente_id);\n    }\n\n    /**\n     * Chiamata per ottenere il piano di ammortamento di un mutuo\n     *\n     * @param  mutuo_id identificativo unico del mutuo del quale si vuole il PianoAmmortamento\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns response contenente l'esito in Success e ErrorMessages. Contenente l'oggetto \n     * Data che a sua volta contiene l'elenco degli oggetti PianoAmmortamento\n     */\n    public getPianoAmmortamento(mutuo_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.pianoAmmortamentoServiceName + this.constants.pathSeparator + mutuo_id);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Http } from '../../models/common/http.namespace';\nimport { BrokerHttpService } from '../common/brokerhttp.service';\nimport { ConstantsService } from '../common/constants.service';\nimport { DdlItem } from '../../models/common/ddlitem';\n\n@Injectable()\nexport class DropdownService {\n\n    private tipologieTasse: Array<DdlItem> = [\n        { codice: 0, descrizione: \"\" },\n        { codice: 1, descrizione: \"tasse1\" },\n        { codice: 2, descrizione: \"tasse2\" },\n        { codice: 3, descrizione: \"tasse3\" },\n    ];\n\n    private tipiAffittuario: Array<DdlItem> = [\n        { codice: 0, descrizione: \"\" },\n        { codice: 1, descrizione: \"tipoAffittuario1\" },\n        { codice: 2, descrizione: \"tipoAffittuario2\" },\n        { codice: 3, descrizione: \"tipoAffittuario3\" },\n    ];\n\n    private euribor: Array<DdlItem> = [\n        { codice: 0, descrizione: \"\" },\n        { codice: 1, descrizione: \"euribor1\" },\n        { codice: 2, descrizione: \"euribor2\" },\n        { codice: 3, descrizione: \"euribor3\" },\n    ];\n\n    private tipiOmi: Array<DdlItem> = [\n        { codice: 0, descrizione: \"\" },\n        { codice: 1, descrizione: \"omi1\" },\n        { codice: 2, descrizione: \"omi2\" },\n        { codice: 3, descrizione: \"omi3\" },\n        { codice: 4, descrizione: \"omi4\" },\n        { codice: 5, descrizione: \"omi5\" }\n    ];\n\n    constructor(\n        private httpService: BrokerHttpService,\n        private constants: ConstantsService) { }\n\n    public getTipologieTasse(): Array<DdlItem> {\n        return this.tipologieTasse;\n    }\n\n    public getTipiAffittuari(): Array<DdlItem> {\n        return this.tipiAffittuario;\n    }\n\n    public getEuribor(): Array<DdlItem> {\n        return this.euribor;\n    }\n\n    public getTipiOmi(idComuneIstat: string): Array<DdlItem> {\n        return this.tipiOmi;\n    }\n\n    public getDropdown(Tipoddl: number, Filtro: string, Ordina: string, Componi: string, PrimoVuoto: string, PrimoTutti: string): Observable<Http.HttpResponse> {\n        const path = '/' + Tipoddl + '/' + Filtro + '/' + Ordina + '/' + Componi + '/' + PrimoVuoto + '/' + PrimoTutti;\n        return this.httpService.get(this.constants.getDropdownServiceName + path);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ConstantsService } from '../common/constants.service';\n\n@Injectable()\nexport class IconeService {\n\n    private tipologiaVilla: Array<string> = [\n        \"A/1\",\n        \"A/7\",\n        \"A/8\",\n        \"A/9\"\n    ];\n    private tipologiaCasa: Array<string> = [\n        \"A/2\",\n        \"A/3\",\n        \"A/4\",\n        \"A/5\",\n        \"A/11\"\n    ];\n    private tipologiaAgricolo: Array<string> = [\n        \"A/6\",\n        \"D/10\"\n    ];\n    private tipologiaUfficio: Array<string> = [\n        \"A/10\",\n        \"C/3\",\n        \"E/3\",\n        \"E/4\",\n        \"E/6\",\n        \"E/8\",\n        \"E/9\",\n        \"F/1\",\n        \"F/2\"\n    ];\n    private tipologiaAlbergo: Array<string> = [\n        \"B/1\",\n        \"B/3\",\n        \"C/5\",\n        \"D/2\"\n    ];\n    private tipologiaOspedale: Array<string> = [\n        \"B/2\",\n        \"D/4\"\n    ];\n    private tipologiaScuola: Array<string> = [\n        \"B/5\"\n    ];\n    private tipologiaMuseo: Array<string> = [\n        \"B/6\"\n    ];\n    private tipologiaChiesa: Array<string> = [\n        \"B/7\",\n        \"E/7\"\n    ];\n    private tipologiaMagazzino: Array<string> = [\n        \"B/8\",\n        \"C/2\",\n        \"E/5\",\n        \"F/5\"\n    ];\n    private tipologiaNegozio: Array<string> = [\n        \"C/1\",\n        \"D/8\"\n    ];\n    private tipologiaSport: Array<string> = [\n        \"C/4\",\n        \"D/6\"\n    ];\n    private tipologiaGarage: Array<string> = [\n        \"C/6\",\n        \"C/7\"\n    ];\n    private tipologiaFabbrica: Array<string> = [\n        \"D/1\",\n        \"D/7\"\n    ];\n    private tipologiaTeatro: Array<string> = [\n        \"D/3\"\n    ];\n    private tipologiaBanca: Array<string> = [\n        \"D/5\"\n    ];\n    private tipologiaPonte: Array<string> = [\n        \"D/9\",\n        \"E/2\"\n    ];\n    private tipologiaStazione: Array<string> = [\n        \"E/1\"\n    ];\n    private tipologiaCantiere: Array<string> = [\n        \"F/3\",\n        \"F/4\",\n        \"F/6\"\n    ];\n\n    constructor(private constants: ConstantsService) { }\n\n    public getClasseIcona(tipologia: string): string {\n        if (this.tipologiaAgricolo.includes(tipologia)) {\n            return this.constants.tipologiaImmobileAgricolo;\n        }\n        if (this.tipologiaAlbergo.includes(tipologia)) {\n            return this.constants.tipologiaImmobileAlbergo;\n        }\n        if (this.tipologiaBanca.includes(tipologia)) {\n            return this.constants.tipologiaImmobileBanca;\n        }\n        if (this.tipologiaCantiere.includes(tipologia)) {\n            return this.constants.tipologiaImmobileCantiere;\n        }\n        if (this.tipologiaCasa.includes(tipologia)) {\n            return this.constants.tipologiaImmobileCasa;\n        }\n        if (this.tipologiaChiesa.includes(tipologia)) {\n            return this.constants.tipologiaImmobileChiesa;\n        }\n        if (this.tipologiaFabbrica.includes(tipologia)) {\n            return this.constants.tipologiaImmobileFabbrica;\n        }\n        if (this.tipologiaGarage.includes(tipologia)) {\n            return this.constants.tipologiaImmobileGarage;\n        }\n        if (this.tipologiaMagazzino.includes(tipologia)) {\n            return this.constants.tipologiaImmobileMagazzino;\n        }\n        if (this.tipologiaMuseo.includes(tipologia)) {\n            return this.constants.tipologiaImmobileMuseo;\n        }\n        if (this.tipologiaNegozio.includes(tipologia)) {\n            return this.constants.tipologiaImmobileNegozio;\n        }\n        if (this.tipologiaOspedale.includes(tipologia)) {\n            return this.constants.tipologiaImmobileOspedale;\n        }\n        if (this.tipologiaPonte.includes(tipologia)) {\n            return this.constants.tipologiaImmobilePonte;\n        }\n        if (this.tipologiaScuola.includes(tipologia)) {\n            return this.constants.tipologiaImmobileScuola;\n        }\n        if (this.tipologiaSport.includes(tipologia)) {\n            return this.constants.tipologiaImmobileSport;\n        }\n        if (this.tipologiaStazione.includes(tipologia)) {\n            return this.constants.tipologiaImmobileStazione;\n        }\n        if (this.tipologiaTeatro.includes(tipologia)) {\n            return this.constants.tipologiaImmobileTeatro;\n        }\n        if (this.tipologiaUfficio.includes(tipologia)) {\n            return this.constants.tipologiaImmobileUfficio;\n        }\n        if (this.tipologiaVilla.includes(tipologia)) {\n            return this.constants.tipologiaImmobileVilla;\n        }\n        return this.constants.tipologiaImmobileCasa;\n    }\n}\n","import { ErrorHandlerService } from './handler/error/error-handler.service';\nimport { LogErroriService } from './services/log-errori/log-errori.service';\nimport { NgModule } from '@angular/core';\n\nimport { Storage } from '@ionic/Storage';\nimport { IonicStorageModule } from '@ionic/Storage';\n\nimport { ConstantsService } from './services/common/constants.service';\nimport { BrokerHttpService } from './services/common/brokerhttp.service';\nimport { ImmobiliService } from './services/immobili/immobili.service';\nimport { ClientiService } from './services/clienti/clienti.service';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { DropdownService } from './services/dropdown/dropdown.service';\nimport { IconeService } from './services/icone/icone.service';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    HttpClientModule,\n    IonicStorageModule.forRoot()\n  ],\n  providers: [\n    ConstantsService,\n    BrokerHttpService,\n    ImmobiliService,\n    ClientiService,\n    DropdownService,\n    LogErroriService,\n    ErrorHandlerService,\n    IconeService\n  ],\n  exports: [\n  ]\n})\nexport class BrokerLibModule {\n  static forRoot() {\n    return {\n      ngModule: BrokerLibModule,\n      providers: [],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Http } from '../../models/common/http.namespace';\nimport { BrokerHttpService } from '../common/brokerhttp.service';\nimport { ConstantsService } from '../common/constants.service';\n\n/**\n * Classe che raggruppa i servizi relativi ai Report\n *\n * @export\n * ReportService\n */\n@Injectable()\nexport class ReportService {\n\n    constructor(\n        private httpService: BrokerHttpService,\n        private constants: ConstantsService) { }\n\n    /**\n     * Chiamata per ottenere il report della situazione generale di un cliente\n     *\n     * @param cliente_id\n     * @param tokenValue Token di autenticazione ottenuto dalla login\n     * @returns\n     */\n    public getSituazioneGenerale(cliente_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.situazioneGeneraleServiceName + this.constants.pathSeparator + cliente_id);\n    }\n\n    /**\n     * Chiamata per ottenere i dati che vanno a popolare i grafici\n     *\n     * @param  cliente_id\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns\n     */\n    public getGrafici(cliente_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.graficiServiceName + this.constants.pathSeparator + cliente_id);\n    }\n\n    /**\n     * Chiamata per scatenare l'invio del report generale in formato PDF al cliente passandolo in una mail\n     *\n     * @param  cliente_id\n     * @param  tokenValue Token di autenticazione ottenuto dalla login\n     * @returns\n     */\n    public getPdfReport(cliente_id: number): Observable<Http.HttpResponse> {\n        return this.httpService.get(this.constants.pdfReportServiceName + this.constants.pathSeparator + cliente_id);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Http } from \"../../models/common/http.namespace\";\nimport { LoginRequest } from \"../../models/login/loginRequest\";\nimport { CambioPasswordRequest } from \"../../models/login/cambioPasswordRequest\";\n\nimport { BrokerHttpService } from \"../common/brokerhttp.service\";\nimport { WsToken } from '../../models/login/wsToken';\nimport { StoreService } from '../store/store.service';\nimport { ConstantsService } from '../common/constants.service';\n\n@Injectable()\nexport class LoginService {\n    constructor(\n        private httpService: BrokerHttpService,\n        private storeService: StoreService,\n        private constants: ConstantsService) {\n    }\n\n    public CambioPassword(bodyCambio: CambioPasswordRequest) {\n        return this.httpService.post(this.constants.cambioPasswordServiceName, bodyCambio);\n    }\n\n    public Login(body: LoginRequest): Observable<Http.HttpResponse> {\n        // eseguo la post\n        return this.httpService.postNoToken(this.constants.loginServiceName, body);\n    }\n\n    // public Login(body: LoginRequest): Observable<Http.HttpResponse> { // momentaneamente in get per usare il servizio finto di test\n    //     // eseguo la post\n    //     return this.httpService.getNoToken(this.constants.loginServiceName);\n    // }\n\n    /*\n    QUESTA Ã¨ LA LOGICA DA METTERE SUL CHIAMANTE DELLA LOGIN\n    .subscribe(r => {\n\n            let response = new WsToken();\n            if (r.Success) {\n                response = r.Data;\n                this.storeService.setUserData(response); // eventuale controllo su esito salvataggio in sessione\n            } else {\n                let errorMessage = r.ErrorMessage;\n\n                // invio al server dell'errore\n\n                // popup errore\n            }\n\n        });\n    } */\n}\n","import { GraficiAndamentoAnnuale } from './graficiAndamentoAnnuale';\nimport { GraficiIndicatore } from './graficiIndicatore';\nimport { GraficiConcentrazione } from './graficiConcentrazione';\nimport { GraficiAffittuario } from './graficiAffittuario';\n\nexport class Grafici {\n    public andamento_annuale: Array<GraficiAndamentoAnnuale>;\n    public indicatori: Array<GraficiIndicatore>;\n    public concentrazione: Array<GraficiConcentrazione>;\n    public affittuari: Array<GraficiAffittuario>;\n}\n","export class GraficiAffittuario {\n    public descrizione_affittuario: string;\n    public percentuale: number;\n}\n","export class GraficiAndamentoAnnuale {\n    public anno: number;\n    public attivo: number;\n    public passivo: number;\n}\n","export class GraficiConcentrazione {\n    public codice_catastale: string;\n    public percentuale: number;\n}\n","export class GraficiIndicatore {\n    public descrizione_indicatore: string;\n    public percentuale: number;\n}\n","import { ReportGeneraleAttivo } from './reportGeneraleAttivo';\nimport { ReportGeneralePassivo } from './reportGeneralePassivo';\n\nexport class ReportGenerale {\n    public proprieta_id: number;\n    public codice_tipologia: string;\n    public descrizione_tipologia: string;\n    public valore_acquisto: number;\n    public quota: number;\n    public indirizzo: string;\n    public civico: string;\n    public citta: string;\n    public cap: string;\n    public provincia: string;\n    public prima_casa: string;\n    public passivi: Array<ReportGeneralePassivo>;\n    public attivo: ReportGeneraleAttivo;\n}\n","export class ReportGeneraleAttivo {\n    public descrizione_affittuario: string;\n    public cedolare_secca: string;\n    public aliquota_cedolare: string;\n    public prima_scadenza_anni: string;\n    public data_inizio: string;\n    public importo_mensile: string;\n}\n","export class ReportGeneralePassivo {\n    public descrizione_passivo: string;\n    public importo_annuale: string;\n}\n","export class ReportGeneraleOggettoColonna {\n    public descrizione: string;\n    public valore: string;\n}\n","export class AbilitaAppClienteRequest {\n    public cliente_id: string;\n    public password: string;\n}","export class BookValue {\n    public gruppo_catastale: string;\n    public codice_catastale: string;\n    public descrizione_tipologia: string;\n    public book_value: number;\n    public numero_proprieta: number;\n}","export class InserimentoClienteRequest {\n    public cliente_id: number;\n    public promotore_id: number;\n    public nome: string;\n    public cognome: string;\n    public codice_fiscale: string;\n    public email: string;\n}\n","export class InserimentoClienteResponse {\n    public return_id: number;\n}\n","// tslint:disable-next-line: no-namespace\nexport class Immobile {\n    public cliente_id: number;\n    public proprieta_id: number;\n    public indirizzo: string;\n    public civico: string;\n    public email: string;\n    public citta: string;\n    public cap: string;\n    public provincia: string;\n    public prima_casa: string;\n    public valore_acquisto: number;\n    public quota: number;\n    public data_aggiornamento: number;\n    public codice_tipologia: string;\n}\n\n\n","export class AffittoDettaglio {\n    public proprieta_affitto_id: number;\n    public tipo_affittuario_id: number;\n    public descrizione_affittuario: string;\n    public spese_condominiali: boolean;\n    public importo_spese_condominiali: number;\n    public cedolare_secca: boolean;\n    public aliquota_cedolare: number;\n    public prima_scadenza_anni: number;\n    public data_inizio: string;\n    public importo_mensile: number;\n}","import { NumberSymbol } from '@angular/common';\n\nexport class CancellazioneImmobileRequest {\n    public immobile_id: number;\n}\n","export class CointestatarioDettaglio {\n    public proprieta_possesso_id: number;\n    public nominativo: string;\n    public codice_fiscale: string;\n    public quota: number;\n}","export class DatiCatastaliDettaglio {\n    public proprieta_catasto_id: number;\n    public sezione: string;\n    public foglio: string;\n    public zona: string;\n    public micro_zona: string;\n    public particella: string;\n    public subalterno: string;\n    public categoria: string;\n    public classe: string;\n    public rendita: number;\n    public vani: string;\n    public superficie_interni: number;\n    public superficie_totale: number;\n}","import { CointestatarioDettaglio } from './cointestatarioDettaglio';\nimport { TassaDettaglio } from './tassaDettaglio';\nimport { SpesaDettaglio } from './spesaDettaglio';\nimport { AffittoDettaglio } from './affittoDettaglio';\nimport { MutuoDettaglio } from './mutuoDettaglio';\nimport { DatiCatastaliDettaglio } from './datiCatastaliDettaglio';\nimport { OmiDettaglio } from './omiDettaglio';\nimport { NumberSymbol } from '@angular/common';\n\nexport class ImmobileDettaglio {\n    public proprieta_id: number;\n    public tipologie_catastali_id: number;\n    public codice_tipologia: string;\n    public descrizione_tipologia: string;\n    public data_aggiornamento: string;\n    public valore_acquisto: number;\n    public quota: number;\n    public catastale_cod: string;\n    public comune_zone_cod: string;\n    public indirizzo: string;\n    public civico: string;\n    public citta: string;\n    public cap: string;\n    public provincia: string;\n    public istat_cod: string;\n    public latitudine: string;\n    public longitudine: string;\n    public prima_casa: boolean;\n    public destinazione_uso_id: number;\n    public descrizione_uso: string;\n    public mutuo: boolean;\n    public tasso: string;\n    public affitto: boolean;\n    public detrazione_interessi: boolean;\n    public euribor_id: number;\n    public descrizione_euribor: string;\n    public cointestatari: Array<CointestatarioDettaglio>;\n    public tasse: Array<TassaDettaglio>;\n    public spese: Array<SpesaDettaglio>;\n    public affitto_dettaglio: AffittoDettaglio;\n    public mutuo_dettaglio: MutuoDettaglio;\n    public dati_catastali: DatiCatastaliDettaglio;\n    public omi: OmiDettaglio;\n}","import { ImmobileDettaglio } from './immobileDettaglio';\n\nexport class ImmobileDettaglioVM extends ImmobileDettaglio {\n    public tasse_totale: number;\n}\n","export class InserimentoImmobileResponse {\n    public return_id: number;\n}\n","export class MutuoDettaglio {\n    public proprieta_mutuo_id: number;\n    public detrazione_interessi: string;\n    public tipo_tasso: string;\n    public euribor_id: number;\n    public descrizione_euribor: string;\n    public spread: number;\n    public rate_id: number;\n    public descrizione_rate: string;\n    public numero_rate: number;\n    public durata: number;\n    public data_inizio: string;\n    public importo_iniziale: number;\n}","export class OmiDettaglio {\n    public valore_omi: number;\n    public valore_pot: number;\n    public affitto_pot: number;\n    public ammortamento_decadenza: number;\n}\n","export class SpesaDettaglio {\n    public proprieta_spese_id: number;\n    public spesa_id: number;\n    public descrizione_spesa: string;\n    public importo_annuale: number;\n}","export class TassaDettaglio {\n    public proprieta_tasse_id: number;\n    public tassa_id: number;\n    public descrizione_tassa: string;\n    public importo_annuale: number;\n}","export class PianoAmmortamento {\n    public indice: number;\n    public anno: number;\n    public importo_rata: number;\n    public quota_interessi: number;\n    public quota_capitale: number;\n    public interessi_residui: number;\n    public capitale_residuo: number;\n}","import { PianoAmmortamento } from './pianoAmmortamento';\n\nexport class AnnoPianoAmmortamento {\n    public anno: number;\n    public piano_lista: Array<PianoAmmortamento>;\n}","export class LoginRequest {\n    public username: string;\n    public password: string;\n    public id_phone: string;\n    public app_chiamante: string;\n}\n","export class Utente {\n    public utente_id: number;\n    public nome: string;\n    public cognome: string;\n    public codice_fiscale: string;\n    public email: string;\n}\n","export class CambioPasswordRequest {\n    public vecchia_password: string;\n    public nuova_password: string;\n    public ripeti_password: string;\n}\n","export class ErrorMessage {\n    public msg_tipo: string;\n    public msg_code: number;\n    public msg_testo: string;\n    public msg_method: string;\n    public msg_techdata: string;\n}","export class DdlItem {\n    public codice: number;\n    public descrizione: string;\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAGa,gBAAgB;IAD7B;QAEoB,eAAU,GAAW,4CAA4C,CAAC;QAClE,mBAAc,GAAW,eAAe,CAAC;QACzC,kBAAa,GAAW,GAAG,CAAC;QAE5B,qBAAgB,GAAW,OAAO,CAAC;QACnC,8BAAyB,GAAW,aAAa,CAAC;;QAGlD,2BAAsB,GAAW,aAAa,CAAC;QAC/C,2BAAsB,GAAW,aAAa,CAAC;QAC/C,2BAAsB,GAAW,aAAa,CAAC;QAC/C,2BAAsB,GAAW,aAAa,CAAC;QAC/C,0BAAqB,GAAW,YAAY,CAAC;QAC7C,oCAA+B,GAAW,UAAU,CAAC;;QAGrD,0BAAqB,GAAW,YAAY,CAAC;QAC7C,0BAAqB,GAAW,YAAY,CAAC;QAC7C,iCAA4B,GAAW,YAAY,CAAC;QACpD,yBAAoB,GAAW,cAAc,CAAC;QAC9C,iCAA4B,GAAW,UAAU,CAAC;;QAGlD,kCAA6B,GAAW,eAAe,CAAC;QACxD,uBAAkB,GAAW,YAAY,CAAC;QAC1C,yBAAoB,GAAW,cAAc,CAAC;QAE9C,0BAAqB,GAAW,UAAU,CAAC;QAC3C,2BAAsB,GAAW,cAAc,CAAC;;QAGhD,2BAAsB,GAAW,OAAO,CAAC;QACzC,0BAAqB,GAAW,MAAM,CAAC;QACvC,8BAAyB,GAAW,UAAU,CAAC;QAC/C,6BAAwB,GAAW,SAAS,CAAC;QAC7C,6BAAwB,GAAW,SAAS,CAAC;QAC7C,8BAAyB,GAAW,UAAU,CAAC;QAC/C,4BAAuB,GAAW,QAAQ,CAAC;QAC3C,2BAAsB,GAAW,OAAO,CAAC;QACzC,4BAAuB,GAAW,QAAQ,CAAC;QAC3C,+BAA0B,GAAW,WAAW,CAAC;QACjD,6BAAwB,GAAW,SAAS,CAAC;QAC7C,2BAAsB,GAAW,OAAO,CAAC;QACzC,4BAAuB,GAAW,QAAQ,CAAC;QAC3C,8BAAyB,GAAW,UAAU,CAAC;QAC/C,4BAAuB,GAAW,QAAQ,CAAC;QAC3C,2BAAsB,GAAW,OAAO,CAAC;QACzC,2BAAsB,GAAW,OAAO,CAAC;QACzC,8BAAyB,GAAW,UAAU,CAAC;QAC/C,8BAAyB,GAAW,UAAU,CAAC;;QAG/C,kBAAa,GAAW,mBAAmB,CAAC;QAC5C,qBAAgB,GAAW,sBAAsB,CAAC;QAClD,gBAAW,GAAW,aAAa,CAAC;KACvD;;;YAzDA,UAAU;;;;IAEP,sCAAkF;;IAClF,0CAAyD;;IACzD,yCAA4C;;IAE5C,4CAAmD;;IACnD,qDAAkE;;IAGlE,kDAA+D;;IAC/D,kDAA+D;;IAC/D,kDAA+D;;IAC/D,kDAA+D;;IAC/D,iDAA6D;;IAC7D,2DAAqE;;IAGrE,iDAA6D;;IAC7D,iDAA6D;;IAC7D,wDAAoE;;IACpE,gDAA8D;;IAC9D,wDAAkE;;IAGlE,yDAAwE;;IACxE,8CAA0D;;IAC1D,gDAA8D;;IAE9D,iDAA2D;;IAC3D,kDAAgE;;IAGhE,kDAAyD;;IACzD,iDAAuD;;IACvD,qDAA+D;;IAC/D,oDAA6D;;IAC7D,oDAA6D;;IAC7D,qDAA+D;;IAC/D,mDAA2D;;IAC3D,kDAAyD;;IACzD,mDAA2D;;IAC3D,sDAAiE;;IACjE,oDAA6D;;IAC7D,kDAAyD;;IACzD,mDAA2D;;IAC3D,qDAA+D;;IAC/D,mDAA2D;;IAC3D,kDAAyD;;IACzD,kDAAyD;;IACzD,qDAA+D;;IAC/D,qDAA+D;;IAG/D,yCAA4D;;IAC5D,4CAAkE;;IAClE,uCAAoD;;;;;;;AC1DxD,MAYa,iBAAiB;;;;;;IAI1B,YACY,IAAgB,EAChB,SAA2B,EAC3B,OAAoB;QAFpB,SAAI,GAAJ,IAAI,CAAY;QAChB,cAAS,GAAT,SAAS,CAAkB;QAC3B,YAAO,GAAP,OAAO,CAAa;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvD;;;;;IAEM,GAAG,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;KACnF;;;;;IAEM,UAAU,CAAC,IAAY;QAC1B,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAoB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;KAC9F;;;;;;IAEM,IAAI,CAAC,IAAY,EAAE,IAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;KAC1F;;;;;;IAEM,WAAW,CAAC,IAAY,EAAE,IAAS;QACtC,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAoB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;KACrG;;;YA5BJ,UAAU;;;;YAVF,UAAU;YAMV,gBAAgB;YANS,WAAW;;;;;;;IAazC,4CAAoC;;;;;IAGhC,iCAAwB;;;;;IACxB,sCAAmC;;;;;IACnC,oCAA4B;;;;;;;ACnBpC,MAAa,WAAW;CAQvB;;;IAPG,4BAAqB;;IACrB,qCAA8B;;IAC9B,mCAA4B;;IAC5B,oCAA6B;;IAC7B,+BAAwB;;IACxB,gCAAyB;;IACzB,+BAAwB;;;;;;;ACP5B;;;;;;AAgBA,MAAa,gBAAgB;;;;;IAEzB,YACY,WAA8B,EAC9B,SAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAkB;KAAK;;;;;;;;IAUrC,UAAU,CAAC,SAAsB;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;KACjF;;;;;IAEM,oBAAoB,CAAC,YAA0B;;cAC5C,SAAS,GAAgB,IAAI,WAAW,EAAE;QAEhD,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC;QAChD,SAAS,CAAC,cAAc,GAAG,YAAY,CAAC,YAAY,CAAC;QAErD,OAAO,SAAS,CAAC;KACpB;;;YA1BJ,UAAU;;;;YAXF,iBAAiB;YACjB,gBAAgB;;;;;;;IAcjB,uCAAsC;;;;;IACtC,qCAAmC;;;;;;;;ACd3C,MAAa,YAAY;;;;IAErB,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;KACnD;;;;;IAEY,YAAY,CAAC,YAAoB;;;kBACpC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACtC,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,YAAY;gBACrB,OAAO,EAAE,CAAC,IAAI,CAAC;aAClB,CAAC;YACF,KAAK,CAAC,IAAI;;;;YAAC,CAAC,MAAW;gBACnB,MAAM,CAAC,OAAO,EAAE,CAAC;aACpB,EAAC,CAAC;SACN;KAAA;;;;;IAEY,iBAAiB,CAAC,YAAoB;;;kBACzC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACtC,MAAM,EAAE,QAAQ;gBAChB,OAAO,EAAE,YAAY;gBACrB,OAAO,EAAE,CAAC,QAAQ,CAAC;aACtB,CAAC;YACF,KAAK,CAAC,IAAI;;;;YAAC,CAAC,MAAW;gBACnB,MAAM,CAAC,OAAO,EAAE,CAAC;aACpB,EAAC,CAAC;SACN;KAAA;;;YA1BJ,UAAU;;;;YAJF,eAAe;;;;;;;IAOR,uCAAwC;;;;;;;ACNxD,MAAa,OAAO;CAInB;;;IAHG,8BAA2B;;IAC3B,8BAA2B;;IAC3B,yBAAsB;;;;;;;ACL1B,MAKa,YAAY;;;;IAMrB,YAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAJ5B,YAAO,GAAG,MAAM,CAAC;QAKrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;;;;IAEM,aAAa;QAChB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;;;;;IAEM,WAAW,CAAC,QAAiB;QAChC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI;;;;YAAC,CAAC,GAAG;gBAC9C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB,EAAC,CAAC;SACN;aAAM;YACH,OAAO,CAAC,CAAC,CAAC;SACb;QACD,OAAO,CAAC,CAAC;KACZ;;;;IAEM,kBAAkB;QACrB,OAAO,IAAI,OAAO;;;;QAAC,OAAO;YACtB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;;gBAEtB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;;;;gBAAC,CAAC,GAAY;;oBAE7C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;yBAAM;wBACH,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;wBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;wBAEpB,OAAO,CAAC,IAAI,CAAC,CAAC;qBACjB;iBACJ,EACA,CAAC;aACL;iBAAM;;;gBAKH,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACzB;SACJ,EAAC,CAAC;KACN;;;YAvDJ,UAAU;;;;YAHF,OAAO;;;;;;;IAMZ,+BAAyB;;;;;IAEzB,+BAAyB;;;;;IAEb,+BAAwB;;;;;;;ACXxC;;;;;;AAgBA,MAAa,eAAe;;;;;IAExB,YACY,WAA8B,EAC9B,SAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAkB;KAAK;;;;;;;;IAUrC,WAAW,CAAC,UAAkB;QACjC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB;cAC3D,IAAI,CAAC,SAAS,CAAC,aAAa;cAC5B,UAAU,CAAC,CAAC;;KAErB;;;;;;;;IAUM,WAAW,CAAC,WAAmB;;QAElC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB;cAC3D,IAAI,CAAC,SAAS,CAAC,aAAa;cAC5B,WAAW,CAAC,CAAC;KACtB;;;;;;;;IAUM,WAAW,CAAC,QAA2B;QAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;KACjF;;;;;;;IASM,WAAW,CAAC,oBAAkD;QACjE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;KAC7F;;;;;;;;IAUM,kBAAkB,CAAC,WAAmB;QACzC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,WAAW,CAAC,CAAC;KAClH;;;;;IAEM,4BAA4B,CAAC,WAAmB;QACnD,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,WAAW,CAAC,CAAC;KAC5H;;;YA1EJ,UAAU;;;;YAXF,iBAAiB;YACjB,gBAAgB;;;;;;;IAcjB,sCAAsC;;;;;IACtC,oCAAmC;;;;;;;;ACnB3C,MAAa,OAAO;CAUnB;;;IATG,6BAA0B;;IAC1B,uBAAoB;;IACpB,0BAAuB;;IACvB,wBAAqB;;IACrB,iCAA8B;;IAC9B,mCAAgC;;IAChC,6BAA0B;;IAC1B,qCAAkC;;IAClC,gCAA6B;;;;;;;ACVjC,MAAa,UAAU;CAItB;;;IAHG,yBAAmB;;IACnB,mCAA6B;;IAC7B,oCAA8B;;;;;;;ACHlC,MAaa,cAAc;;;;;IAcvB,YACY,YAA0B,EAC1B,eAAgC;QADhC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAZrC,aAAQ,GAAsB,SAAS,CAAC;QACvC,0BAAqB,GAAqB,IAAI,OAAO,EAAW,CAAC;QAClE,sBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QAK7D,oBAAe,GAAqB,IAAI,OAAO,EAAW,CAAC;QAC5D,uBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAM5D,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;KAChC;;;;;IAEM,UAAU,CAAC,OAAgB;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,SAAS;;;;QAAC,CAAC;YACtE,IAAI,CAAC,CAAC,OAAO,EAAE;gBACX,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;;gBAE9C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzC;SACJ,EAAC,CAAC;KACN;;;;IAEM,aAAa;QAChB,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;KACjC;;;;;IAEM,WAAW,CAAC,QAAiB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC3C;aAAM;YACH,OAAO,CAAC,CAAC,CAAC;SACb;QACD,OAAO,CAAC,CAAC;KACZ;;;;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;IAEM,YAAY;QACf,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,EAAE,EAAE;YAC3F,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI;;;;YAAC,CAAC,GAAY;gBACrD,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpC;qBAAM;oBACH,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACnC;aACJ,EAAC,CAAC;SACN;KACJ;;;;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;IAEM,kBAAkB;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;;;;;IAEM,oBAAoB,CAAC,iBAAoC;QAC5D,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC;KACrC;;;;IAEM,oBAAoB;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;IAEM,sBAAsB;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB;;;;;IAEM,aAAa,CAAC,IAAgB;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;YA/FJ,UAAU;;;;YAVF,YAAY;YACZ,eAAe;;;;IAYpB,iCAAwB;;IACxB,yCAAwC;;IACxC,kCAA+C;;;;;IAC/C,+CAAyE;;IACzE,2CAAqE;;;;;IACrE,kCAA0B;;;;;IAE1B,oCAA+B;;;;;IAE/B,yCAAmE;;IACnE,4CAAgE;;;;;IAG5D,sCAAkC;;;;;IAClC,yCAAwC;;;;;;;AC7BhD,MAQa,mBAAmB;;;;;;;;IAE5B,YACY,QAAkB,EAClB,IAAY,EACZ,gBAAkC,EAClC,YAA0B,EAC1B,cAA8B;QAJ9B,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAQ;QACZ,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;KAAK;;;;;IAE/C,WAAW,CAAC,KAAgC;;cAClC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,WAAW;QAE3D,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;;cAC5B,MAAM,GAAG,IAAI,WAAW,EAAE;QAChC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;QACpC,MAAM,CAAC,aAAa,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrB,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;;QAErB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS;;;;QAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,GAAG,sBAAsB,CAAC,CAAC;SAC3F,EAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;KAC7C;;;YA5BJ,UAAU;;;;YANwB,QAAQ;YAAE,MAAM;YAD1C,gBAAgB;YAIhB,YAAY;YACZ,cAAc;;;;;;;IAMf,uCAA0B;;;;;IAC1B,mCAAoB;;;;;IACpB,+CAA0C;;;;;IAC1C,2CAAkC;;;;;IAClC,6CAAsC;;;;;;;ACf9C;;;;;;AAgBA,MAAa,cAAc;;;;;IAEvB,YACY,WAA8B,EAC9B,SAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAkB;KAAK;;;;;;IAQrC,UAAU;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;KACrE;;;;;;;;IAUM,UAAU,CAAC,OAAkC;QAChD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;KAC/E;;;;;;;IASM,iBAAiB,CAAC,OAAiC;QACtD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;KACtF;;;;;;;;IAUM,YAAY,CAAC,UAAkB;QAClC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;KAChH;;;;;;;;IAUM,oBAAoB,CAAC,QAAgB;QACxC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,4BAA4B,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC;KACtH;;;YA9DJ,UAAU;;;;YAXF,iBAAiB;YACjB,gBAAgB;;;;;;;IAcjB,qCAAsC;;;;;IACtC,mCAAmC;;;;;;;ACpB3C,MASa,eAAe;;;;;IAgCxB,YACY,WAA8B,EAC9B,SAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAkB;QAhC/B,mBAAc,GAAmB;YACrC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;YAC9B,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE;YACpC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE;YACpC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE;SACvC,CAAC;QAEM,oBAAe,GAAmB;YACtC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;YAC9B,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,kBAAkB,EAAE;YAC9C,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,kBAAkB,EAAE;YAC9C,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,kBAAkB,EAAE;SACjD,CAAC;QAEM,YAAO,GAAmB;YAC9B,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;YAC9B,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE;YACtC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE;YACtC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE;SACzC,CAAC;QAEM,YAAO,GAAmB;YAC9B,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;YAC9B,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE;YAClC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE;YAClC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE;YAClC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE;YAClC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE;SACrC,CAAC;KAI0C;;;;IAErC,iBAAiB;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC9B;;;;IAEM,iBAAiB;QACpB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;;;;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;IAEM,UAAU,CAAC,aAAqB;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;;;;IAEM,WAAW,CAAC,OAAe,EAAE,MAAc,EAAE,MAAc,EAAE,OAAe,EAAE,UAAkB,EAAE,UAAkB;;cACjH,IAAI,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU;QAC9G,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC;KAC7E;;;YAxDJ,UAAU;;;;YAJF,iBAAiB;YACjB,gBAAgB;;;;;;;IAMrB,yCAKE;;;;;IAEF,0CAKE;;;;;IAEF,kCAKE;;;;;IAEF,kCAOE;;;;;IAGE,sCAAsC;;;;;IACtC,oCAAmC;;;;;;;AC3C3C,MAIa,YAAY;;;;IA2FrB,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAzFvC,mBAAc,GAAkB;YACpC,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACR,CAAC;QACM,kBAAa,GAAkB;YACnC,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,MAAM;SACT,CAAC;QACM,sBAAiB,GAAkB;YACvC,KAAK;YACL,MAAM;SACT,CAAC;QACM,qBAAgB,GAAkB;YACtC,MAAM;YACN,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACR,CAAC;QACM,qBAAgB,GAAkB;YACtC,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACR,CAAC;QACM,sBAAiB,GAAkB;YACvC,KAAK;YACL,KAAK;SACR,CAAC;QACM,oBAAe,GAAkB;YACrC,KAAK;SACR,CAAC;QACM,mBAAc,GAAkB;YACpC,KAAK;SACR,CAAC;QACM,oBAAe,GAAkB;YACrC,KAAK;YACL,KAAK;SACR,CAAC;QACM,uBAAkB,GAAkB;YACxC,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACR,CAAC;QACM,qBAAgB,GAAkB;YACtC,KAAK;YACL,KAAK;SACR,CAAC;QACM,mBAAc,GAAkB;YACpC,KAAK;YACL,KAAK;SACR,CAAC;QACM,oBAAe,GAAkB;YACrC,KAAK;YACL,KAAK;SACR,CAAC;QACM,sBAAiB,GAAkB;YACvC,KAAK;YACL,KAAK;SACR,CAAC;QACM,oBAAe,GAAkB;YACrC,KAAK;SACR,CAAC;QACM,mBAAc,GAAkB;YACpC,KAAK;SACR,CAAC;QACM,mBAAc,GAAkB;YACpC,KAAK;YACL,KAAK;SACR,CAAC;QACM,sBAAiB,GAAkB;YACvC,KAAK;SACR,CAAC;QACM,sBAAiB,GAAkB;YACvC,KAAK;YACL,KAAK;YACL,KAAK;SACR,CAAC;KAEkD;;;;;IAE7C,cAAc,CAAC,SAAiB;QACnC,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC;SAClD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC;SAC/C;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC7C,OAAO,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC;SACpD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC;SAClD;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC;SAClD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;SAChD;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC;KAC/C;;;YAzJJ,UAAU;;;;YAFF,gBAAgB;;;;;;;IAKrB,sCAKE;;;;;IACF,qCAME;;;;;IACF,yCAGE;;;;;IACF,wCAUE;;;;;IACF,wCAKE;;;;;IACF,yCAGE;;;;;IACF,uCAEE;;;;;IACF,sCAEE;;;;;IACF,uCAGE;;;;;IACF,0CAKE;;;;;IACF,wCAGE;;;;;IACF,sCAGE;;;;;IACF,uCAGE;;;;;IACF,yCAGE;;;;;IACF,uCAEE;;;;;IACF,sCAEE;;;;;IACF,sCAGE;;;;;IACF,yCAEE;;;;;IACF,yCAIE;;;;;IAEU,iCAAmC;;;;;;;AC/FnD,MAoCa,eAAe;;;;IAC1B,OAAO,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,EAAE;SACd,CAAC;KACH;;;YA1BF,QAAQ,SAAC;gBACR,YAAY,EAAE,EACb;gBACD,OAAO,EAAE;oBACP,gBAAgB;oBAChB,kBAAkB,CAAC,OAAO,EAAE;iBAC7B;gBACD,SAAS,EAAE;oBACT,gBAAgB;oBAChB,iBAAiB;oBACjB,eAAe;oBACf,cAAc;oBACd,eAAe;oBACf,gBAAgB;oBAChB,mBAAmB;oBACnB,YAAY;iBACb;gBACD,OAAO,EAAE,EACR;aACF;;;;;;;ACnCD;;;;;;AAcA,MAAa,aAAa;;;;;IAEtB,YACY,WAA8B,EAC9B,SAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAkB;KAAK;;;;;;;IASrC,qBAAqB,CAAC,UAAkB;QAC3C,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,6BAA6B,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;KACzH;;;;;;;IASM,UAAU,CAAC,UAAkB;QAChC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;KAC9G;;;;;;;IASM,YAAY,CAAC,UAAkB;QAClC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;KAChH;;;YAtCJ,UAAU;;;;YATF,iBAAiB;YACjB,gBAAgB;;;;;;;IAYjB,oCAAsC;;;;;IACtC,kCAAmC;;;;;;;AClB3C,MAYa,YAAY;;;;;;IACrB,YACY,WAA8B,EAC9B,YAA0B,EAC1B,SAA2B;QAF3B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,cAAS,GAAT,SAAS,CAAkB;KACtC;;;;;IAEM,cAAc,CAAC,UAAiC;QACnD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;KACtF;;;;;IAEM,KAAK,CAAC,IAAkB;;QAE3B,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;KAC9E;;;YAfJ,UAAU;;;;YALF,iBAAiB;YAEjB,YAAY;YACZ,gBAAgB;;;;;;;IAKjB,mCAAsC;;;;;IACtC,oCAAkC;;;;;IAClC,iCAAmC;;;;;;;ACX3C,MAAa,OAAO;CAKnB;;;IAJG,oCAAyD;;IACzD,6BAA4C;;IAC5C,iCAAoD;;IACpD,6BAA6C;;;;;;;ACTjD,MAAa,kBAAkB;CAG9B;;;IAFG,qDAAuC;;IACvC,yCAA2B;;;;;;;ACF/B,MAAa,uBAAuB;CAInC;;;IAHG,uCAAoB;;IACpB,yCAAsB;;IACtB,0CAAuB;;;;;;;ACH3B,MAAa,qBAAqB;CAGjC;;;IAFG,iDAAgC;;IAChC,4CAA2B;;;;;;;ACF/B,MAAa,iBAAiB;CAG7B;;;IAFG,mDAAsC;;IACtC,wCAA2B;;;;;;;ACC/B,MAAa,cAAc;CAc1B;;;IAbG,sCAA4B;;IAC5B,0CAAgC;;IAChC,+CAAqC;;IACrC,yCAA+B;;IAC/B,+BAAqB;;IACrB,mCAAyB;;IACzB,gCAAsB;;IACtB,+BAAqB;;IACrB,6BAAmB;;IACnB,mCAAyB;;IACzB,oCAA0B;;IAC1B,iCAA6C;;IAC7C,gCAAoC;;;;;;;AChBxC,MAAa,oBAAoB;CAOhC;;;IANG,uDAAuC;;IACvC,8CAA8B;;IAC9B,iDAAiC;;IACjC,mDAAmC;;IACnC,2CAA2B;;IAC3B,+CAA+B;;;;;;;ACNnC,MAAa,qBAAqB;CAGjC;;;IAFG,oDAAmC;;IACnC,gDAA+B;;;;;;;ACFnC,MAAa,4BAA4B;CAGxC;;;IAFG,mDAA2B;;IAC3B,8CAAsB;;;;;;;ACF1B,MAAa,wBAAwB;CAGpC;;;IAFG,8CAA0B;;IAC1B,4CAAwB;;;;;;;ACF5B,MAAa,SAAS;CAMrB;;;IALG,qCAAgC;;IAChC,qCAAgC;;IAChC,0CAAqC;;IACrC,+BAA0B;;IAC1B,qCAAgC;;;;;;;ACLpC,MAAa,yBAAyB;CAOrC;;;IANG,+CAA0B;;IAC1B,iDAA4B;;IAC5B,yCAAoB;;IACpB,4CAAuB;;IACvB,mDAA8B;;IAC9B,0CAAqB;;;;;;;ACNzB,MAAa,0BAA0B;CAEtC;;;IADG,+CAAyB;;;;;;;;ACA7B,MAAa,QAAQ;CAcpB;;;IAbG,8BAA0B;;IAC1B,gCAA4B;;IAC5B,6BAAyB;;IACzB,0BAAsB;;IACtB,yBAAqB;;IACrB,yBAAqB;;IACrB,uBAAmB;;IACnB,6BAAyB;;IACzB,8BAA0B;;IAC1B,mCAA+B;;IAC/B,yBAAqB;;IACrB,sCAAkC;;IAClC,oCAAgC;;;;;;;ACdpC,MAAa,gBAAgB;CAW5B;;;IAVG,gDAAoC;;IACpC,+CAAmC;;IACnC,mDAAuC;;IACvC,8CAAmC;;IACnC,sDAA0C;;IAC1C,0CAA+B;;IAC/B,6CAAiC;;IACjC,+CAAmC;;IACnC,uCAA2B;;IAC3B,2CAA+B;;;;;;;ACRnC,MAAa,4BAA4B;CAExC;;;IADG,mDAA2B;;;;;;;ACH/B,MAAa,uBAAuB;CAKnC;;;IAJG,wDAAqC;;IACrC,6CAA0B;;IAC1B,iDAA8B;;IAC9B,wCAAqB;;;;;;;ACJzB,MAAa,sBAAsB;CAclC;;;IAbG,sDAAoC;;IACpC,yCAAuB;;IACvB,wCAAsB;;IACtB,sCAAoB;;IACpB,4CAA0B;;IAC1B,4CAA0B;;IAC1B,4CAA0B;;IAC1B,2CAAyB;;IACzB,wCAAsB;;IACtB,yCAAuB;;IACvB,sCAAoB;;IACpB,oDAAkC;;IAClC,mDAAiC;;;;;;;ACJrC,MAAa,iBAAiB;CAkC7B;;;IAjCG,yCAA4B;;IAC5B,mDAAsC;;IACtC,6CAAgC;;IAChC,kDAAqC;;IACrC,+CAAkC;;IAClC,4CAA+B;;IAC/B,kCAAqB;;IACrB,0CAA6B;;IAC7B,4CAA+B;;IAC/B,sCAAyB;;IACzB,mCAAsB;;IACtB,kCAAqB;;IACrB,gCAAmB;;IACnB,sCAAyB;;IACzB,sCAAyB;;IACzB,uCAA0B;;IAC1B,wCAA2B;;IAC3B,uCAA2B;;IAC3B,gDAAmC;;IACnC,4CAA+B;;IAC/B,kCAAsB;;IACtB,kCAAqB;;IACrB,oCAAwB;;IACxB,iDAAqC;;IACrC,uCAA0B;;IAC1B,gDAAmC;;IACnC,0CAAqD;;IACrD,kCAAoC;;IACpC,kCAAoC;;IACpC,8CAA2C;;IAC3C,4CAAuC;;IACvC,2CAA8C;;IAC9C,gCAAyB;;;;;;;AC1C7B,MAEa,mBAAoB,SAAQ,iBAAiB;CAEzD;;;IADG,2CAA4B;;;;;;;ACHhC,MAAa,2BAA2B;CAEvC;;;IADG,gDAAyB;;;;;;;ACD7B,MAAa,cAAc;CAa1B;;;IAZG,4CAAkC;;IAClC,8CAAoC;;IACpC,oCAA0B;;IAC1B,oCAA0B;;IAC1B,6CAAmC;;IACnC,gCAAsB;;IACtB,iCAAuB;;IACvB,0CAAgC;;IAChC,qCAA2B;;IAC3B,gCAAsB;;IACtB,qCAA2B;;IAC3B,0CAAgC;;;;;;;ACZpC,MAAa,YAAY;CAKxB;;;IAJG,kCAA0B;;IAC1B,kCAA0B;;IAC1B,mCAA2B;;IAC3B,8CAAsC;;;;;;;ACJ1C,MAAa,cAAc;CAK1B;;;IAJG,4CAAkC;;IAClC,kCAAwB;;IACxB,2CAAiC;;IACjC,yCAA+B;;;;;;;ACJnC,MAAa,cAAc;CAK1B;;;IAJG,4CAAkC;;IAClC,kCAAwB;;IACxB,2CAAiC;;IACjC,yCAA+B;;;;;;;ACJnC,MAAa,iBAAiB;CAQ7B;;;IAPG,mCAAsB;;IACtB,iCAAoB;;IACpB,yCAA4B;;IAC5B,4CAA+B;;IAC/B,2CAA8B;;IAC9B,8CAAiC;;IACjC,6CAAgC;;;;;;;ACLpC,MAAa,qBAAqB;CAGjC;;;IAFG,qCAAoB;;IACpB,4CAA6C;;;;;;;ACJjD,MAAa,YAAY;CAKxB;;;IAJG,gCAAwB;;IACxB,gCAAwB;;IACxB,gCAAwB;;IACxB,qCAA6B;;;;;;;ACJjC,MAAa,MAAM;CAMlB;;;IALG,2BAAyB;;IACzB,sBAAoB;;IACpB,yBAAuB;;IACvB,gCAA8B;;IAC9B,uBAAqB;;;;;;;ACLzB,MAAa,qBAAqB;CAIjC;;;IAHG,iDAAgC;;IAChC,+CAA8B;;IAC9B,gDAA+B;;;;;;;ACHnC,MAAa,YAAY;CAMxB;;;IALG,gCAAwB;;IACxB,gCAAwB;;IACxB,iCAAyB;;IACzB,kCAA0B;;IAC1B,oCAA4B;;;;;;;ACLhC,MAAa,OAAO;CAGnB;;;IAFG,yBAAsB;;IACtB,8BAA2B;;;;;;;;;;;;;;;"}